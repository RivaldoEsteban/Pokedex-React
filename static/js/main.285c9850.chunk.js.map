{"version":3,"sources":["pokemon/pokemon.js","App.js","reportWebVitals.js","index.js"],"names":["getPokemon","endpoint","id","a","fetch","response","json","data","CardPokemon","useState","name","imageFront","imageBack","types","abilities","pokemon","setPokemon","event","preventDefault","value","target","querySelector","speech","window","speechSynthesis","otherData","description","flavor_text_entries","find","flavor","language","utterance","SpeechSynthesisUtterance","flavor_text","speak","sprites","front_default","back_default","className","src","alt","map","type","ability","action","onSubmit","placeholder","autoComplete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAGeA,E,gFAAf,WAA0BC,EAAUC,GAApC,iBAAAC,EAAA,sEACyBC,MAAM,6BAAD,OAA8BH,EAA9B,YAA0CC,EAA1C,MAD9B,cACQG,EADR,gBAEqBA,EAASC,OAF9B,cAEQC,EAFR,yBAGSA,GAHT,4C,sBAiGeC,MAzFf,WAAwB,IAAD,EACSC,mBAAS,CACrCC,KAAM,WACNC,WACE,kEACFC,UAAW,GACXV,GAAI,MACJW,MAAO,GACPC,UAAW,KARQ,mBACdC,EADc,KACLC,EADK,iDAWrB,WAA4BC,GAA5B,yBAAAd,EAAA,6DACEc,EAAMC,iBACAC,EAAQF,EAAMG,OAAOC,cAAc,SAASF,MAFpD,SAIwBnB,EAAW,UAAWmB,GAJ9C,cAIQJ,EAJR,OAMQO,EAASC,OAAOC,gBANxB,SAO0BxB,EAAW,kBAAmBmB,GAPxD,OAOQM,EAPR,OAUQC,EAAcD,EAAUE,oBAAoBC,MAChD,SAACC,GAAD,MAAqC,OAAzBA,EAAOC,SAASpB,QAGxBqB,EAAY,IAAIC,yBAAJ,UACbjB,EAAQL,KADK,aACIgB,EAAYO,cAElCX,EAAOY,MAAMH,GAEbf,EAAW,CACTN,KAAMK,EAAQL,KACdC,WAAYI,EAAQoB,QAAQC,cAC5BxB,UAAWG,EAAQoB,QAAQE,aAC3BnC,GAAIa,EAAQb,GACZW,MAAOE,EAAQF,MACfC,UAAWC,EAAQD,YAzBvB,6CAXqB,sBAwCrB,OACE,sBAAKwB,UAAU,UAAf,UACE,gCACE,mBAAGA,UAAU,gBACb,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,aACb,mBAAGA,UAAU,iBAGjB,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BvB,EAAQL,OACtC,sBAAK4B,UAAU,cAAf,UACE,qBAAKA,UAAU,QAAQC,IAAKxB,EAAQJ,WAAY6B,IAAI,KACpD,qBAAKF,UAAU,QAAQC,IAAKxB,EAAQH,UAAW4B,IAAI,QAErD,qBAAKF,UAAU,gBAAf,SACGvB,EAAQF,MAAM4B,KAAI,SAACC,GAClB,OAAO,mBAAGJ,UAAU,OAAb,SAAqBI,EAAKA,KAAKhC,eAI5C,qBAAK4B,UAAU,eAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,WAAd,uBACA,qBAAKA,UAAU,cAAf,SACGvB,EAAQD,UAAU2B,KAAI,SAACE,GACtB,OAAO,oBAAIL,UAAU,YAAd,SAA2BK,EAAQA,QAAQjC,oBAM5D,qBAAK4B,UAAU,uBAAf,SACE,uBAAMM,OAAO,GAAGC,SA1ED,4CA0Ef,UACE,uBACEP,UAAU,QACVI,KAAK,OACLI,YAAY,iCACZC,aAAa,QAGf,qDCtFKC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.285c9850.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./pokemon-styles.css\";\n\nasync function getPokemon(endpoint, id) {\n  const response = await fetch(`https://pokeapi.co/api/v2/${endpoint}/${id}/`);\n  const data = await response.json();\n  return data;\n}\n\n// console.log(speech);\n\nfunction CardPokemon() {\n  const [pokemon, setPokemon] = useState({\n    name: \"totodile\",\n    imageFront:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/158.png\",\n    imageBack: \"\",\n    id: \"169\",\n    types: [],\n    abilities: [],\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const value = event.target.querySelector(\"input\").value;\n\n    const pokemon = await getPokemon(\"pokemon\", value);\n\n    const speech = window.speechSynthesis;\n    const otherData = await getPokemon(\"pokemon-species\", value);\n    // console.log(otherData);\n\n    const description = otherData.flavor_text_entries.find(\n      (flavor) => flavor.language.name === \"es\"\n    );\n\n    const utterance = new SpeechSynthesisUtterance(\n      `${pokemon.name}. ${description.flavor_text}`\n    );\n    speech.speak(utterance);\n\n    setPokemon({\n      name: pokemon.name,\n      imageFront: pokemon.sprites.front_default,\n      imageBack: pokemon.sprites.back_default,\n      id: pokemon.id,\n      types: pokemon.types,\n      abilities: pokemon.abilities,\n    });\n  }\n\n  return (\n    <div className=\"pokedex\">\n      <div>\n        <p className=\"circle-icon\"></p>\n        <div className=\"icon\">\n          <p className=\"icon-red\"></p>\n          <p className=\"icopn-\"></p>\n        </div>\n      </div>\n      <div className=\"information-pokemon\">\n        <div className=\"image-pokemon\">\n          <h1 className=\"name-pokemon\">{pokemon.name}</h1>\n          <div className=\"image-group\">\n            <img className=\"image\" src={pokemon.imageFront} alt=\"\" />\n            <img className=\"image\" src={pokemon.imageBack} alt=\"\" />\n          </div>\n          <div className=\"types-pokemon\">\n            {pokemon.types.map((type) => {\n              return <p className=\"type\">{type.type.name}</p>;\n            })}\n          </div>\n        </div>\n        <div className=\"data-pokemon\">\n          <div className=\"data\">\n            <h4 className=\"datatype\">abilities</h4>\n            <div className=\"data-result\">\n              {pokemon.abilities.map((ability) => {\n                return <li className=\"abilities\">{ability.ability.name}</li>;\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"search-pokemon-input\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Escoge entre los 898 pokemones\"\n            autoComplete=\"off\"\n            // onChange={handleChange}\n          />\n          <button>enviar</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default CardPokemon;\n","import \"./App.css\";\nimport CardPokemon from \"./pokemon/pokemon\";\n\nfunction App() {\n  return <CardPokemon />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}